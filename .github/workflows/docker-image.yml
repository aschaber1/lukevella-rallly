name: Build and publish Container image
on:
  push:
    tags:
      - "v*"

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE_NAME: ${{ github.repository }}
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_NAMESPACE }}

jobs:
  build:
    name: Build and publish container image

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-24.04
          - platform: linux/arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}

    outputs:
      digest_linux_amd64: ${{ steps.gen_output.outputs.digest_linux_amd64 }}
      digest_linux_arm64: ${{ steps.gen_output.outputs.digest_linux_arm64 }}

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Log in to ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to docker.io registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            # branch event
            type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          file: ./apps/web/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: >
            type=image,"name=${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }},${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=true
          build-args: |
            APP_VERSION=${{ github.ref_name }}
            SELF_HOSTED=true

      - name: Generate output
        id: gen_output
        run: |
          platform=${{ matrix.platform }}
          digest=${{ steps.build.outputs.digest }}
          echo "digest_${platform//\//_}=${digest}" | tee -a $GITHUB_OUTPUT

      # This step generates an artifact attestation for the image, which is an
      # unforgeable statement about where and how it was built. It increases
      # supply chain security for people who consume the image.
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  merge-and-publish-docker:
    name: Merge digests and publish the Docker image
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # use branch ref for non‑default branches
            type=ref,event=branch
            # semver tags on tag event
            type=semver,event=tag,pattern={{version}}
            type=semver,event=tag,pattern={{major}}.{{minor}}
            type=semver,event=tag,pattern={{major}}

      - name: Create and push manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          index-annotations: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
          sources: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}@${{ needs.build.outputs.digest_linux_amd64 }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}@${{ needs.build.outputs.digest_linux_arm64 }}

  merge-and-publish-ghcr:
    name: Merge digests and publish the Docker image
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # use branch ref for non‑default branches
            type=ref,event=branch
            # semver tags on tag event
            type=semver,event=tag,pattern={{version}}
            type=semver,event=tag,pattern={{major}}.{{minor}}
            type=semver,event=tag,pattern={{major}}

      - name: Create and push manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          index-annotations: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
          sources: |
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}@${{ needs.build.outputs.digest_linux_amd64 }}
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}@${{ needs.build.outputs.digest_linux_arm64 }}
